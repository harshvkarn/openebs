---
- name: Download YAML for openebs operator
  get_url:
    url: "{{ openebs_operator_link }}"
    dest: "{{ ansible_env.HOME }}/{{ openebs_operator_alias }}"
    force: yes
  register: result
  until:  "'OK' in result.msg"
  delay: 5
  retries: 3

- name: Change m-apiserver image to desired tag in operator YAML
  replace:
    path: "{{ ansible_env.HOME }}/{{ openebs_operator_alias }}" 
    regexp: "{{item}}:[\\w.-]+"
    replace: "{{item}}:{{ test_tag }}"
  with_items: 
    - m-apiserver
    - jiva
    - openebs-k8s-provisioner

- name: Get kubernetes master name
  shell: hostname
  args:
    executable: /bin/bash
  register: result

- name: Get kubernetes master status
  shell: source ~/.profile; kubectl get nodes | grep {{ result.stdout.lower()}} | awk '{print $2}'
  args:
    executable: /bin/bash
  register: result
  until:  result.stdout == 'Ready'
  delay: 60
  retries: 10 
  ignore_errors: true  

- name: 
  debug: 
    msg: "Ending play, K8S Master NOT READY"
  when: result.stdout != "Ready"

- name: Ending Playbook Run - K8S master is NOT READY
  meta: end_play
  when: result.stdout != "Ready"

- name: Start the log aggregator to capture operator logs
  shell: source ~/.profile; nohup stern "maya*|openebs*" --since 1m >"{{ ansible_env.HOME }}/setup/logs/operator.log" &
  args:
    executable: /bin/bash

- name: Deploy the openebs operator yml
  shell: >
    source ~/.profile; 
    kubectl apply -f {{ openebs_operator_alias }} 
    | grep deployment | awk '{print $2}'
    | tr -d '"'
  args:
    executable: /bin/bash
  register: labels

- name: Confirm provisioner & apiserver are running
  shell: source ~/.profile; kubectl get pods --selector=name={{item}} | grep Running |wc -l 
  args:
    executable: /bin/bash
  register: result_pod
  until: result_pod.stdout|int >= 1
  delay: 120
  retries: 15
  with_items: "{{ labels.stdout_lines }}"

- name: Get maya-apiserver pod name
  shell: source ~/.profile; kubectl get pods --selector=name=maya-apiserver 
  args:
    executable: /bin/bash
  register: result_name

- name: Create fact for pod name
  set_fact: 
    pod_name: "{{ result_name.stdout_lines[1].split()[0] }}"

- name: Confirm that maya-cli is available in the maya-apiserver pod
  shell: source ~/.profile; kubectl exec {{pod_name}} -c maya-apiserver -- maya version
  args:
    executable: /bin/bash
  register: result_vers
  failed_when: "'Maya' not in result_vers.stdout"

- name: Download YAML for openebs storage classes
  get_url:
    url: "{{ openebs_storageclasses_link }}"
    dest: "{{ ansible_env.HOME }}/{{ openebs_storageclasses_alias }}"
    force: yes
  register: result
  until:  "'OK' in result.msg"
  delay: 5
  retries: 3

- name: Deploy the openebs storageclasses yml
  shell: source ~/.profile; kubectl apply -f {{ openebs_storageclasses_alias }}
  args:
    executable: /bin/bash

- name: Confirm that openebs storage classes are created
  shell: source ~/.profile; kubectl get sc
  args:
    executable: /bin/bash
  register: result_sc
  until: "'openebs.io/provisioner-iscsi' in result_sc.stdout"
  delay: 10
  retries: 6

- name: Terminate the log aggregator
  shell: source ~/.profile; killall stern
  args:
    executable: /bin/bash
